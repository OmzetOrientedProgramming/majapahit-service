image: golang:latest

services:
  - postgres:latest

variables:
  REPO_NAME: gitlab.cs.ui.ac.id/ppl-fasilkom-ui/2022/Kelas-B/OOP/majapahit-service
  POSTGRES_DB:  $DB_NAME
  POSTGRES_USER: $DB_USERNAME
  POSTGRES_PASSWORD: $DB_PASSWORD
  POSTGRES_HOST_AUTH_METHOD: trust

before_script:
  - echo "Starting..."
  - echo `pwd`
  - mkdir -p $GOPATH/src/$(dirname $REPO_NAME)
  - ln -svf $CI_PROJECT_DIR $GOPATH/src/$REPO_NAME
  - cd $GOPATH/src/$REPO_NAME

stages:
  - test
  - build
  - deploy

Test:
  stage: test
  script:
    - go test -v $(go list ./... | grep -v ./main.go) 
    - go test $(go list ./... | grep -v ./main.go) -coverprofile coverage.cov && go tool cover -func coverage.cov

SonarScanner Dev:
  image:
    name: sonarsource/sonar-scanner-cli:4.6
    entrypoint: [“”]
  stage: test
  script:
    - sonar-scanner
      -Dsonar.host.url=$SONARQUBE_HOST_URL
      -Dsonar.login=$SONARQUBE_TOKEN
      -Dsonar.branch.name=$CI_COMMIT_REF_NAME
      -Dsonar.branch.target=staging
  except:
    - master
    - staging

SonarScanner:
  image:
    name: sonarsource/sonar-scanner-cli:4.6
    entrypoint: [“”]
  stage: test
  script:
    - sonar-scanner
      -Dsonar.host.url=$SONARQUBE_HOST_URL
      -Dsonar.login=$SONARQUBE_TOKEN
      -Dsonar.branch.name=$CI_COMMIT_REF_NAME
  only:
    - master
    - staging

after_script:
  - echo "Success!"
