---
image: golang:latest

services:
  - postgres:latest

variables:
  REPO_NAME: gitlab.cs.ui.ac.id/ppl-fasilkom-ui/2022/Kelas-B/OOP/majapahit-service
  POSTGRES_DB:  $DB_NAME
  POSTGRES_USER: $DB_USERNAME
  POSTGRES_PASSWORD: $DB_PASSWORD
  POSTGRES_HOST_AUTH_METHOD: trust

before_script:
  - mkdir -p $GOPATH/src/$(dirname $REPO_NAME)
  - ln -svf $CI_PROJECT_DIR $GOPATH/src/$REPO_NAME
  - cd $GOPATH/src/$REPO_NAME

stages:
  - test
  - build
  - deploy

Test:
  stage: test
  script:
    - go test -v $(go list ./... | grep -v ./main.go) 
    - go test $(go list ./... | grep -v ./main.go) -coverprofile=coverage.out && go tool cover -func coverage.out

SonarScanner Dev:
  image:
    name: sonarsource/sonar-scanner-cli:4.6
    entrypoint: [“”]
  stage: test
  script:
    - sonar-scanner
      -Dsonar.host.url=$SONARQUBE_HOST_URL
      -Dsonar.login=$SONARQUBE_TOKEN
      -Dsonar.branch.name=$CI_COMMIT_REF_NAME
      -Dsonar.branch.target=staging
      -Dsonar.projectKey=$SONARQUBE_PROJECT_KEY
      -Dproject.settings=./sonar-project.properties
  except:
    - master
    - staging

SonarScanner:
  image:
    name: sonarsource/sonar-scanner-cli:4.6
    entrypoint: [“”]
  stage: test
  script:
    - sonar-scanner
      -Dsonar.host.url=$SONARQUBE_HOST_URL
      -Dsonar.login=$SONARQUBE_TOKEN
      -Dsonar.branch.name=$CI_COMMIT_REF_NAME
      -Dsonar.projectKey=$SONARQUBE_PROJECT_KEY
      -Dproject.settings=./sonar-project.properties
  only:
    - master
    - staging

Build:
  stage: build
  image: golang:latest
  script:
    - go get -d -v
    - go build -o bin/majapahit-service -v .

Deployment:
  rules:
    - if: '$CI_COMMIT_REF_NAME == "master"'
  image: ruby:2.7
  stage: deploy
  before_script:
    - gem install dpl
    - wget -qO- https://cli-assets.heroku.com/install-ubuntu.sh | sh
  script:
    - dpl --provider=heroku --app=$HEROKU_APP_NAME --api-key=$HEROKU_API_KEY
  environment:
    name: production
    url: https://$HEROKU_APP_NAME.herokuapp.com

Deployment Staging:
  rules:
    - if: '$CI_COMMIT_REF_NAME == "staging"'
  image: ruby:2.7
  stage: deploy
  before_script:
    - gem install dpl
    - wget -qO- https://cli-assets.heroku.com/install-ubuntu.sh | sh
  script:
    - dpl --provider=heroku --app=$HEROKU_APP_NAME_STAGING --api-key=$HEROKU_API_KEY
  environment:
    name: staging
    url: https://$HEROKU_APP_NAME_STAGING.herokuapp.com
